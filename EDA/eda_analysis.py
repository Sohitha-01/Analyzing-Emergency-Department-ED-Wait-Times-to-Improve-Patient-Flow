# -*- coding: utf-8 -*-
"""EDA_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NayLhqZ054IfC8AU9lVxoMEApvr5V1_b

**Import Libraries**
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from pathlib import Path

# make plots prettier
sns.set(style="whitegrid", palette="Set2")
plt.rcParams["figure.figsize"] = (8,5)

"""**Load Data**"""

df = pd.read_csv("/content/er_clean.csv")

print("Shape:", df.shape)
print("Columns:", df.columns.tolist())
df.head()

"""**Universal Analysis**

Numeric Summary
"""

display(df.describe())

"""Age distribution"""

sns.histplot(df["Patient Age"], bins=20, kde=True)
plt.title("Age Distribution")
plt.xlabel("Age"); plt.ylabel("Count")
plt.show()

"""Gender distribution"""

df["Patient Gender"].value_counts().plot(kind="bar")
plt.title("Gender Distribution")
plt.ylabel("Count")
plt.show()

"""Race distribution (top 10 only)"""

df["Patient Race"].value_counts().head(10).plot(kind="bar")
plt.title("Top 10 Races in Dataset")
plt.ylabel("Count")
plt.show()

"""Department referrals"""

df["Department Referral"].value_counts().plot(kind="bar")
plt.title("Department Referrals")
plt.ylabel("Count")
plt.xticks(rotation=45)
plt.show()

"""Satisfaction distribution"""

sns.histplot(df["Patient Satisfaction Score"], bins=10, kde=False)
plt.title("Patient Satisfaction Distribution")
plt.xlabel("Score (0–10)")
plt.show()

"""**BIVARIATE ANALYSIS**

Wait time overall
"""

sns.histplot(df["Patient Waittime"], bins=25, kde=True)
plt.title("Distribution of ED Wait Times")
plt.xlabel("Wait Time (minutes)")
plt.ylabel("Count")
plt.show()

"""Wait time by gender"""

sns.boxplot(x="Patient Gender", y="Patient Waittime", data=df)
plt.title("Wait Time by Gender")
plt.show()

"""Wait time by admission outcome"""

sns.boxplot(x="Patient Admission Flag", y="Patient Waittime", data=df)
plt.title("Wait Time by Admission (0 = Not Admitted, 1 = Admitted)")
plt.show()

"""Wait time by age group"""

df["AgeGroup"] = pd.cut(df["Patient Age"], bins=[0,18,40,65,100],
                        labels=["Child","Adult","Middle-Aged","Senior"])
sns.boxplot(x="AgeGroup", y="Patient Waittime", data=df)
plt.title("Wait Time by Age Group")
plt.show()

"""Wait time by race (only common groups)"""

race_counts = df["Patient Race"].value_counts()
valid_races = race_counts[race_counts > 50].index
sns.barplot(x="Patient Race", y="Patient Waittime",
            data=df[df["Patient Race"].isin(valid_races)],
            ci=None)
plt.xticks(rotation=45)
plt.title("Average Wait Time by Race (>=50 samples)")
plt.show()

"""Wait time by department"""

sns.barplot(x="Department Referral", y="Patient Waittime", data=df, ci=None)
plt.xticks(rotation=45)
plt.title("Average Wait Time by Department")
plt.show()

"""**TIME-BASED ANALYSIS**

Wait time by weekday
"""

weekday_order = ["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"]
sns.barplot(x="Admission_Weekday", y="Patient Waittime", data=df,
            order=weekday_order, estimator="mean", ci=None)
plt.title("Average Wait Time by Weekday")
plt.ylabel("Minutes")
plt.show()

"""Wait time by hour of day"""

sns.lineplot(x="Admission_Hour", y="Patient Waittime", data=df, ci=None, marker="o")
plt.title("Average Wait Time by Hour of Day")
plt.ylabel("Minutes")
plt.show()

"""Heatmap: weekday × hour"""

pivot = df.pivot_table(index="Admission_Weekday", columns="Admission_Hour",
                       values="Patient Waittime", aggfunc="mean")
pivot = pivot.reindex(weekday_order)

sns.heatmap(pivot, cmap="YlOrRd")
plt.title("Heatmap of Avg Wait Time (Weekday × Hour)")
plt.ylabel("Weekday")
plt.xlabel("Hour")
plt.show()

"""**SATISFACTION VS WAIT TIME**"""

sns.scatterplot(x="Patient Waittime", y="Patient Satisfaction Score", data=df, alpha=0.3)
plt.title("Satisfaction vs Wait Time")
plt.show()

corr_val = df["Patient Waittime"].corr(df["Patient Satisfaction Score"])
print("Correlation between Wait Time and Satisfaction:", round(corr_val, 3))

"""**MULTIVARIATE ANALYSIS**

Correlation heatmap (numeric features only)
"""

num_cols = ["Patient Age","Patient Waittime","Patient Satisfaction Score","Patients CM"]
sns.heatmap(df[num_cols].corr(), annot=True, cmap="coolwarm", vmin=-1, vmax=1)
plt.title("Correlation Matrix (Numeric Features)")
plt.show()

"""Outliers in wait time"""

sns.boxplot(x=df["Patient Waittime"])
plt.title("Outliers in Wait Times")
plt.show()

"""Outliers in satisfaction"""

sns.boxplot(x=df["Patient Satisfaction Score"])
plt.title("Outliers in Satisfaction Scores")
plt.show()